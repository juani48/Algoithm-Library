@page "/cube/{Id:int}"
@using Solution.MAUI_Blazor.Components
@inject CubeUseCaseGet getCube
@inject AlgorithmUseCaseList algorithmList
@inject NavigationManager navigationManager

<h3>@_cube.Text</h3>

<h5>Algoritmos del cubo</h5>
<table class="table">
    <thead>
        <tr>
            <th>Algoritmo</th>
            <th>Descripción</th>
            <th>Accion</th>
        </tr>
    </thead>
    <tbody>
        @foreach(var algorithm in _list){
            <tr>
                <td>@algorithm.Text</td>
                @if(@algorithm.Description == ""){
                    <td>El algoritmo no tiene una descripción.</td>
                }
                else{
                    <td>@algorithm.Description</td>
                }
                <td>
                    <button class="btn btn-primary">Ver</button>
                </td>
            </tr>
        }
        <tr>
            <td>---</td>
            <td>---</td>
            <td>
                <button @onclick="_GoAddAlgorithm" class="btn btn-primary" >Agregar Algoritmo</button>
            </td>
        </tr>
    </tbody>
</table>

<button @onclick="Close" class="btn btn-secondary" >Cerrar</button>

<Message @ref="@_errorMessage" Text="@stMessage" eventCallback="Close"/>


@code {
    //cube functionality
    [Parameter] public int Id {get; set;}
    private Cube _cube = new Cube();

    //algorithm
    private List<Algorithm> _list = new List<Algorithm>();
    //set message
    private Message _errorMessage = null!;
    private string stMessage = "";

    //functions
    protected override void OnParametersSet(){
        try{
            _cube = getCube.Execute(Id);
            _list = algorithmList.Execute(_cube.Id);
        }
        catch (Exception e){
            _errorMessage = null!;
            stMessage = e.Message;
            //_errorMessage.ShowMessage();
        }
    }
    private void Close(){
        navigationManager.NavigateTo("/cubelist");
    }
    private void _GoAddAlgorithm(){
        navigationManager.NavigateTo($"/add/{Id}");
    }
}